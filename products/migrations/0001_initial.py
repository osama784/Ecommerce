# Generated by Django 5.0.7 on 2024-09-01 14:39

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
import products.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
        ('vendors', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='INVOICE', max_length=50)),
                ('total', models.IntegerField()),
                ('paid_status', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'Processing'), (2, 'Delivered'), (3, 'Shipped'), (4, 'Canceled')])),
                ('products', models.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('stock', models.IntegerField(default=1)),
                ('category', models.CharField(choices=[('OR', 'organic'), ('VG', 'vegetables'), ('PP', 'plant-based protiens'), ('SF', 'seafood'), ('HS', 'herbs & spices'), ('NS', 'nuts & seeds'), ('JC', 'juice'), ('SB', 'salads & bowls'), ('DS', 'desserts'), ('MB', 'meats & beefs'), ('BG', 'burgers'), ('SH', 'sushis')], max_length=2)),
                ('handle', models.CharField(blank=True, max_length=200, null=True)),
                ('life', models.PositiveSmallIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=products.utils.product_image_download)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendors.vendor')),
            ],
            options={
                'ordering': ['stock'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('entries', models.BigIntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=products.utils.product_attachment_download)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created', models.DateField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Like_DisLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('LK', 'like'), ('DK', 'dislike')], max_length=2)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='products.review')),
            ],
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_name'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('discount__gte', 1), ('discount__lte', 99)), name='check_discount'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('owner', 'product'), name='review_once'),
        ),
        migrations.AddConstraint(
            model_name='like_dislike',
            constraint=models.UniqueConstraint(models.F('owner'), name='like_dislike_once'),
        ),
    ]
